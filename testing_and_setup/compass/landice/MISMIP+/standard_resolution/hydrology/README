This test case is a reproducible experiment for Ben Hills' summer project (2017)

The idea is to test the MISMIP+ bed geometry with a fully coupled system 
(i.e. subglacial drainage is coupled to velocity and to thickness advection).

There are two separate parts to this test case:
1) spinup, where an ice sheet is built from nothing and the grounding line is meant to
stabilize on the retrograde bedslope
2) experiments, these are the MISMIP+ experiments (i.e. Ice1r,Ice2r,etc.).
In this case we run the experiments forward from a spunup state. 
Two sets of experiments are done, one with a continuously evolving hydrology, and a 
second with the hydrology frozen from the spinup state.

In order to run this test case follow these steps:
1) Create a working directory by using the ./setup_testcase.py script in the testing and setup directory
2) move to the working directory and run the ./setup_test.py
    - this will create two separate directories (spinup and experiments)
3) Spinup must be done first, so move to the spinup directory and use the ./run_spinup_parameter_tests.py
script to initiate a spinup with the provided parameters 
    - note that this script can be used to start many spinups simultaneously and each will be 
    given its own directory, named by the parameters (i.e. A_-1e-05_cond_0.001_C0_1.0).
4) Once the spinup for a given set of parameters has been done, we can run the experiments from that spinup
    - move to the experiments directory and use the ./run_mismip+_experiments.py script to start the simulation.
    - This starts two separate simulations forward from the spinup.
        1) fixed hydrology, frozen from the spinup.
        2) continuously evolving hydrology.
    - Again, each set of results is given under a directory named by the parameters used.

This is an example of the directory tree (shortened) for what will be output
work_dir/
├── albany_input.xml -> /home/bhills/repos/MPAS-git/testing_and_setup/compass/landice/MISMIP+/albany_input.xml
├── experiments
│   ├── A_1e-05_cond_0.001_C0_1.0
│   │   ├── constant_beta
│   │   │   ├── albany_input.xml
│   │   │   ├── Ice0
│   │   │   │   ├── albany_input.xml -> ../albany_input.xml
│   │   │   │   ├── landice_grid.nc -> ../../landice_grid_constant_beta.nc
│   │   │   │   ├── landice_model -> ../landice_model
│   │   │   │   ├── namelist.landice
│   │   │   │   └── streams.landice
│   │   │   │   │   │   ├── landice_model -> ../../landice_model
│   │   │   └── slurm.run
│   │   └── evolve
│   │       ├── albany_input.xml
│   │       ├── Ice0
│   │       │   ├── albany_input.xml -> ../albany_input.xml
│   │       │   ├── landice_grid.nc -> ../../landice_grid_evolve.nc
│   │       │   ├── landice_model -> ../landice_model
│   │       │   ├── namelist.landice
│   │       │   └── streams.landice
│   │       ├── landice_model -> ../../landice_model
│   │       └── slurm.run
└── spinup
    ├── A_1e-05_cond_0.001_C0_1.0





This directory contains namelist.input files for several resolutions of the MISMIP+ experiments
(8000 m, 4000 m, 2000 m, 1000 m and 500 m).  The resolution set up in the test directory is determined
by the namelist.input file.  The default resolution is 2000 m.  (The default namelist.input is 
identical to namelist.input.2000m, and the default config_setup_experiment.xml will set up the 
experiment in a directory called '2000m'.)

If you would like to run at a different resolution, you can do the following:

(1) Copy your preferred namelist.input.* file to namelist.input, e.g.:

    > cp namelist.input.1000m namelist.input

    If there is no such file at your preferred resolution, see the comments in namelist.input
    for guidance on making a new one.

(2) In config_setup_experiment.xml, edit the case name.  E.g., change this line:

    <config case="2000m">

    to this:

    <config case="1000m">

(3) Go to the testcase setup directory and set up the case in the usual way, e.g.:

    > cd my_mpas_directory/MPAS-Core/test_cases/ocean
    > ./list_testcases.py [Say the test case you just created is #26]
    > ./setup_testcase.py -o landice -n 26 -f general.config.landice --work_dir /full_path_to_my_test_dir

Note: Resolutions coarser than 2 km are unlikely to give physically accurate results, but can be useful
for testing and debugging.  Resolutions of 1 km or higher are expected to be accurate, but can take
a long time to spin up.

